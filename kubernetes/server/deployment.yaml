# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: 'apps/v1'
kind: 'Deployment'
metadata:
  labels: &labels
    app.kubernetes.io/name: &appName 'winvoice-server'
    app.kubernetes.io/version: '0.6.4'
    app.kubernetes.io/component: 'backend'
    app.kubernetes.io/part-of: 'winvoice'
  namespace: &namespace 'example'
  name: 'winvoice-backend'
spec:
  replicas: 3
  selector:
    matchLabels: *labels
  strategy:
    rollingUpdate: { maxSurge: '25%', maxUnavailable: '25%' }
    type: 'RollingUpdate'
  template:
    metadata:
      annotations: { kubectl.kubernetes.io/default-container: *appName }
      labels: *labels
      namespace: *namespace
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      restartPolicy: 'Always'
      containers:
        - name: *appName
          image: 'winvoice-server:0.6.4'
          imagePullPolicy: 'IfNotPresent'
          resources:
            requests: { cpu: '100m', memory: '100Mi' }
            limits: { cpu: '100m', memory: '100Mi' }

          ports:
            - { name: *appName, containerPort: 8080, protocol: 'TCP' }

          livenessProbe:
            tcpSocket: { port: *appName }
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: '/_status/healthy'
              httpHeaders:
                - name: 'api-version'
                  value: '^0.5'
              port: *appName
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10

          command: ['/bin/sh', '-c']
          args:
            - >- # `--log-rotation never` so that kubernetes will know where the one log file is
              winvoice-server
              --address 0.0.0.0:8080
              --cors-allow-origin /run/secrets/server/cors/allow.txt
              --permissions-model /run/mount/server/permissions/model.conf
              --permissions-policy /run/mount/server/permissions/policy.csv
              --log-rotation never
              postgres
              --host winvoice-database-rw
              --database winvoice
              --username "$(cat /run/secrets/db/username)"
              --password "$(cat /run/secrets/db/password)"

          lifecycle:
            postStart:
              exec: # link log file to stdout so that kubernetes will keep logs
                command:
                  - 'sh'
                  - '-c'
                  - >-
                    mkdir -p "$HOME/.local/state/winvoice-server" &&
                    ln -sf /proc/1/fd/1 "$HOME/.local/state/winvoice-server/server.log"

          volumeMounts:
            - { name: 'database-credentials', mountPath: '/run/secrets/db',               readOnly: true }
            - { name: 'server-cors',          mountPath: '/run/secrets/server/cors',      readOnly: true }
            - { name: 'server-permissions',   mountPath: '/run/mount/server/permissions', readOnly: true }

      volumes:
        - { name: 'database-credentials', secret: { secretName: 'winvoice.database.login' } }
        - { name: 'server-cors',          secret: { secretName: 'winvoice.backend.cors' } }
        - { name: 'server-permissions',   configMap: { name: 'winvoice.backend.permissions' } }
---
